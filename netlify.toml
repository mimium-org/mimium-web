# Settings in the [build] context are global and are applied to all contexts
# unless otherwise overridden by more specific contexts.
[build]
# Directory to change to before starting a build.
# This is where we will look for package.json/.nvmrc/etc.
# If not set, defaults to the root directory.
#   base = "project/"

# Directory that contains the deploy-ready HTML files and assets generated by
# the build. This is relative to the base directory if one has been set, or the
# root directory if a base has not been set. This sample publishes the
# directory located at the absolute path "root/project/build-output"
publish = "public"

# Default build command.
command = "hugo mod get -u && hugo mod npm pack && npm i && hugo --gc --minify"

# Directory with the serverless functions, including background functions,
# to deploy to AWS. This is relative to the base directory if one has been set, 
# or the root directory if a base has not been set.
#   functions = "functions/"
[build.environment]
HUGO_ENV = "production"
HUGO_VERSION = "v0.147.9"
GO_VERSION = "1.22.0"
# Deploy Preview context: all deploys generated from a pull/merge request will
# inherit these settings.
[context.deploy-preview]
# OVERWRITE BASEURL to prevent from redirect
# draft and future articles are shown in deploy preview
command = "hugo mod get -u && hugo mod npm pack npm i && HUGO_BASEURL=${DEPLOY_PRIME_URL} hugo --gc --minify -D -F"

# Branch Deploy context: all deploys that are not from a pull/merge request or
# from the Production branch will inherit these settings.
[context.branch-deploy]
command = "hugo mod get -u && hugo mod npm pack && npm i && HUGO_BASEURL=${DEPLOY_PRIME_URL} hugo --gc --minify"
[context.branch-deploy.environment]
#   NODE_ENV = "development"

# Specific branch context: all deploys from this specific branch will inherit
# these settings.
# [context.staging] # “staging” is a branch name
# command = "HUGO_BASEURL=${DEPLOY_PRIME_URL} hugo"
#   base = "staging"

# For contexts of branches with special characters, enclose the branch name
# with quotes.
# [context."feat/branch"]
# command = "HUGO_BASEURL=${DEPLOY_PRIME_URL} hugo"
#   base = "branch"

# Redirects and headers are GLOBAL for all builds – they do not get scoped to
# contexts no matter where you define them in the file.
# For context-specific rules, use _headers or _redirects files, which are
# PER-DEPLOY.


# A redirect rule with many of the supported properties
# [[redirects]]
#   from = "/old-path"
#   to = "/new-path"

# The default HTTP status code is 301, but you can define a different one.
#   status = 302

# By default, redirects won’t be applied if there’s a file with the same
# path as the one defined in the `from` property. Setting `force` to `true`
# will make the redirect rule take precedence over any existing files.
#   force = true

# Redirect from /old-path?id=123 to /new-path. Each combination of query
# params needs to be defined in a separate [[redirects]] block.
# More information at https://docs.netlify.com/routing/redirects/redirect-options/#query-parameters
#   query = {id = ":id"}

# Redirect based on browser language and geolocation.
#   conditions = {Language = ["en"], Country = ["US"]}

# Sign each request with a value defined in an environment variable
#   signed = "API_SIGNATURE_TOKEN"

# You can also define custom headers within your redirects blocks.
#   [redirects.headers]
#     X-From = "Netlify"
#     X-Api-Key = "some-api-key-string"
